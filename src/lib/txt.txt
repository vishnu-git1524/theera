export const indexGithubRepo = async(githubUrl: string, projectId: string, githubToken?: string)=>{
    const docs = await loadGithubRepo(githubUrl, githubToken)
    const allEmbeddings = await generateEmbeddings(docs)
    await Promise.allSettled(allEmbeddings.map(async (embedding, index)=>{
        console.log(`processing ${index} of ${allEmbeddings.length}`)
        if(!embedding) return

        const sourceCodeEmbeddings = await db.sourceCodeEmbedding.create({
            data:{
                summary: embedding.summary,
                sourceCode: embedding.sourceCode,
                projectId,
                fileName: embedding.fileName,
            }
        })

        await db.$executeRaw `
        UPDATE "SourceCodeEmbeddings"
        SET "summaryEmbedding" = ${embedding.embedding}::vector
        WHERE "id" = ${sourceCodeEmbeddings.id}
        `
    }))

}
